name: Trigger weekly build

on:
  schedule:
    # Runs every Monday at 00:00 UTC
    - cron: '0 * * * *'

jobs:
  check-xunit-status:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Get last xunit.yml workflow run status triggered by push
      id: check-status
      run: |
        status=$(gh api repos/${{ github.repository }}/actions/workflows/xunit.yml/runs \
        --jq '.workflow_runs | map(select(.event == "push" and .head_branch == "main")) | first | .conclusion')
        echo "status=$status" >> $GITHUB_ENV

  weekly-build:
    runs-on: ubuntu-latest
    needs: check-xunit-status
    if: ${{ needs.check-xunit-status.result == 'success' && env.status == 'success' }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Delete existing "weekly-build" release
      run: |
        existing_release=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        https://api.github.com/repos/${{ github.repository }}/releases/tags/weekly-build \
        | jq -r '.id')
        if [ "$existing_release" != "null" ]; then
          curl -s -X DELETE -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/releases/$existing_release
        fi

    - name: Create new "weekly-build" release
      run: |
        current_date=$(date +'%Y-%m-%d')
        curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        -d '{
          "tag_name": "weekly-build",
          "target_commitish": "main",
          "name": "Weekly Build",
          "body": "Auto-generated weekly built on '"$current_date"'",
          "draft": false,
          "prerelease": true
        }' https://api.github.com/repos/${{ github.repository }}/releases

    - name: Complete the weekly build process
      run: echo "Weekly build completed!"
